<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jdk on Broadenj&#39;s Blog.</title>
    <link>https://broadenj.github.io/src/java/jdk/</link>
    <description>Recent content in Jdk on Broadenj&#39;s Blog.</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 17 Dec 2021 11:25:16 +0800</lastBuildDate><atom:link href="https://broadenj.github.io/src/java/jdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java.lang.Math</title>
      <link>https://broadenj.github.io/src/java/jdk/Math/</link>
      <pubDate>Fri, 17 Dec 2021 11:28:16 +0800</pubDate>
      
      <guid>https://broadenj.github.io/src/java/jdk/Math/</guid>
      <description>本文记述 java.lang.Math 的一些常用方法。
除自己内部实现的代码外，好多方法都代理给 java.lang.StrictMath 。
 #floor 与 ceil   这是一对相反的操作，即 assert Math.ceil(a) 与 -Math.ceil(-a) 是等同的。 这两个方法都是先计算数学整数值，再转成 double 类型值  #double ceil(double a) public static double ceil(double a) { return StrictMath.ceil(a); }	返回最小的 double 类型值（向负无穷方向取值），此值需满足两个条件：
 大于或等于参数值 等于数学整数值  特殊情形：
 若参数值等于数学整数值，则返回参数值 若参数为 NaN、无穷值、+0、-0时，则返回参数值 若参数值在区间(-1.0,0)，则返回-0  #double floor(double a) public static double floor(double a) { return StrictMath.floor(a); } 返回最大的 double 类型值（向正无穷方向取值），此值需满足两个条件：
 小于或等于参数值 等于数学整数值  特殊情形：
 若参数值等于数学整数值，则返回参数值 若参数为 NaN、无穷值、+0、-0时，则返回参数值  #示例 public static void main(String[] args) { double a = 123.</description>
    </item>
    
  </channel>
</rss>
